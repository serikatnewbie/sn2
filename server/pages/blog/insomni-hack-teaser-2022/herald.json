{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var d=Object.create;var c=Object.defineProperty;var o=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var i=a=>c(a,\"__esModule\",{value:!0});var g=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),u=(a,s)=>{i(a);for(var t in s)c(a,t,{get:s[t],enumerable:!0})},N=(a,s,t)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let n of h(s))!m.call(a,n)&&n!==\"default\"&&c(a,n,{get:()=>s[n],enumerable:!(t=o(s,n))||t.enumerable});return a},R=a=>N(i(c(a!=null?d(p(a)):{},\"default\",a&&a.__esModule&&\"default\"in a?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a);var r=g((w,l)=>{l.exports=_jsx_runtime});var U={};u(U,{default:()=>f,frontmatter:()=>I});var e=R(r()),I={title:\"Insomni'hack teaser 2022 \\u2013 Herald\",date:\"2022-01-30\",draft:!1,authors:[\"sahuang\"],tags:[\"Insomni'hack teaser 2022\",\"Mobile\",\"Reverse Engineering\",\"Android\",\"apk\",\"rev\",\"React Native\"],summary:\"Hermes Bytecode Reverse Engineering.\"};function b(a={}){let{wrapper:s}=a.components||{};return s?(0,e.jsx)(s,Object.assign({},a,{children:(0,e.jsx)(t,{})})):t();function t(){let n=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",blockquote:\"blockquote\",p:\"p\",code:\"code\",img:\"img\",pre:\"pre\",strong:\"strong\"},a.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\"herald\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#herald\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Herald\"]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsx)(n.p,{children:\"by patacrep\"}),`\n`,(0,e.jsx)(n.p,{children:\"Our lab administrator has just passed out from a strange virus. Please help us find the password to his messaging app so we can identify what he was working on and save his life.\"}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://static.insomnihack.ch/media/Herald-e3081153dbcbc3f2bcd6aa0453e8ec6f7055deaf5762aee0a794e28e58b8bb12.apk\",children:\"Herald.apk\"})}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"After installing the app on our android mobile, a login screen is given, and we get \",(0,e.jsx)(n.code,{children:\"Wrong Username/Password combination\"}),\" when inputting random values.\"]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{src:\"/static/images/insomnihack-teaser-2022/herald-app.png\",alt:\"Login screen of Herald.apk\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Playing around, if \",(0,e.jsx)(n.code,{children:\"admin\"}),\" is used as username, we further receive an alert \",(0,e.jsx)(n.code,{children:\"You are not the admin, Liar!\"})]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{src:\"/static/images/insomnihack-teaser-2022/herald-admin.png\",alt:\"Login attempt with username admin\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Since it\\u2019s an apk file, we can use any apk decompiler to decompile it and extract all assets. While most files are irrelevant, we noticed a bundle file \",(0,e.jsx)(n.code,{children:\"index.android.bundle\"}),\" under \",(0,e.jsx)(n.code,{children:\"/resources/assets\"}),\", which is a Hermes JavaScript bytecode file (\",(0,e.jsx)(n.code,{children:\"Hermes\"}),\" is a JavaScript engine optimized for React Native). At this point we are pretty sure this app was built with React Native, so the key is to reverse this bundle file.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Checking through bundle file reversing, we found this \",(0,e.jsx)(n.a,{href:\"https://github.com/bongtrop/hbctool\",children:\"GitHub Repo\"}),\" of \",(0,e.jsx)(n.code,{children:\"hbctool\"}),\", a command-line interface for disassembling and assembling the Hermes Bytecode. The tool is capable of decompiling \",(0,e.jsx)(n.code,{children:\"bundle\"}),\" to \",(0,e.jsx)(n.code,{children:\"hasm\"}),\" and compiling \",(0,e.jsx)(n.code,{children:\"hasm\"}),\" back to \",(0,e.jsx)(n.code,{children:\"bundle\"}),\". However, we get the following error when trying to decompile:\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-shell\",children:(0,e.jsxs)(n.code,{className:\"language-shell code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`MacBook-Pro-2 ~ % hbctool disasm index.android.bundle test_hasm\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"AssertionError: The HBC version \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"84\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),` is not supported.\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"In the repo, it states that currently only version 59, 62, 74, and 76 are supported. There is a post in the \",(0,e.jsx)(n.a,{href:\"https://github.com/bongtrop/hbctool/issues/12#issuecomment-1012556823\",children:\"repo issues\"}),\" where someone added support for version 84 in his \",(0,e.jsx)(n.a,{href:\"https://github.com/niosega/hbctool/tree/draft/hbc-v84\",children:\"forked repo\"}),\". Using that, we successfully disassembled \",(0,e.jsx)(n.code,{children:\"index.android.bundle\"}),\" to \",(0,e.jsx)(n.code,{children:\"instruction.hasm\"}),\", which looks like this.\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-text\",children:(0,e.jsxs)(n.code,{className:\"language-text code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Function<global>0(1 params, 19 registers, 0 symbols):\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tDeclareGlobalVar    \tUInt32:2961\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[0]: String(2961) '__BUNDLE_START_TIME__'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tDeclareGlobalVar    \tUInt32:2964\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[0]: String(2964) '__DEV__'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tDeclareGlobalVar    \tUInt32:209\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[0]: String(209) 'process'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tDeclareGlobalVar    \tUInt32:2968\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[0]: String(2968) '__METRO_GLOBAL_PREFIX__'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tCreateEnvironment   \tReg8:3\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tLoadThisNS          \tReg8:5\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tLoadConstString     \tReg8:4, UInt16:599\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[1]: String(599) 'production'\n`})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Our goal here is to bypass the password check and login with username \",(0,e.jsx)(n.code,{children:\"admin\"}),\". Looking at the source code, the main interesting function within \",(0,e.jsx)(n.code,{children:\"instruction.hasm\"}),\" is the \",(0,e.jsx)(n.code,{children:\"tryAuth\"}),\" function which is responsible for verifying the username and password.\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-text\",children:(0,e.jsxs)(n.code,{className:\"language-text code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Function<tryAuth>4087(3 params, 13 registers, 0 symbols):\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tLoadThisNS          \tReg8:2\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetByIdShort        \tReg8:0, Reg8:2, UInt8:1, UInt8:121\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(121) 'state'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetById             \tReg8:0, Reg8:0, UInt8:2, UInt16:4142\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(4142) 'username'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tLoadConstString     \tReg8:1, UInt16:801\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[1]: String(801) 'admin'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tJStrictNotEqual     \tAddr8:38, Reg8:0, Reg8:1\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetByIdShort        \tReg8:0, Reg8:2, UInt8:1, UInt8:121\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(121) 'state'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetById             \tReg8:3, Reg8:0, UInt8:3, UInt16:4120\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(4120) 'password'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetById             \tReg8:4, Reg8:2, UInt8:4, UInt16:3485\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(3485) 'decodedText'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tNewArrayWithBuffer  \tReg8:0, UInt16:28, UInt16:28, UInt16:9398\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tCall2               \tReg8:0, Reg8:4, Reg8:2, Reg8:0\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tJStrictEqual        \tAddr8:105, Reg8:3, Reg8:0\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetByIdShort        \tReg8:0, Reg8:2, UInt8:1, UInt8:121\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(121) 'state'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetById             \tReg8:0, Reg8:0, UInt8:2, UInt16:4142\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(4142) 'username'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tJStrictEqual        \tAddr8:45, Reg8:0, Reg8:1\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetEnvironment      \tReg8:0, UInt8:1\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tLoadFromEnvironment \tReg8:0, Reg8:0, UInt8:6\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetById             \tReg8:3, Reg8:0, UInt8:5, UInt16:4460\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(4460) 'Alert'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`})]})}),`\n`,(0,e.jsx)(n.p,{children:\"Let's understand the code line by line.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-text\",children:(0,e.jsxs)(n.code,{className:\"language-text code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetById             \tReg8:0, Reg8:0, UInt8:2, UInt16:4142\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(4142) 'username'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tLoadConstString     \tReg8:1, UInt16:801\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[1]: String(801) 'admin'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tJStrictNotEqual     \tAddr8:38, Reg8:0, Reg8:1\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetByIdShort        \tReg8:0, Reg8:2, UInt8:1, UInt8:121\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(121) 'state'\n`})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"The function reads input username to \",(0,e.jsx)(n.code,{children:\"Reg8:0\"}),\", and loads a const string \",(0,e.jsx)(n.code,{children:\"admin\"}),\" to \",(0,e.jsx)(n.code,{children:\"Reg8:1\"}),\", then compares them. If they are \",(0,e.jsx)(n.strong,{children:\"not equal\"}),\", then some \",(0,e.jsx)(n.code,{children:\"state\"}),\" will be triggered which is to print the \",(0,e.jsx)(n.code,{children:\"Wrong Username/Password combination\"}),\" error.\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-text\",children:(0,e.jsxs)(n.code,{className:\"language-text code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`\tJStrictEqual        \tAddr8:45, Reg8:0, Reg8:1\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetEnvironment      \tReg8:0, UInt8:1\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tLoadFromEnvironment \tReg8:0, Reg8:0, UInt8:6\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetById             \tReg8:3, Reg8:0, UInt8:5, UInt16:4460\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(4460) 'Alert'\n`})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"If they are \",(0,e.jsx)(n.strong,{children:\"equal\"}),\", then an alert \",(0,e.jsx)(n.code,{children:\"You are not the admin, Liar!\"}),\" will pop out.\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-text\",children:(0,e.jsxs)(n.code,{className:\"language-text code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`  GetById             \tReg8:3, Reg8:0, UInt8:3, UInt16:4120\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(4120) 'password'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetById             \tReg8:4, Reg8:2, UInt8:4, UInt16:3485\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(3485) 'decodedText'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tNewArrayWithBuffer  \tReg8:0, UInt16:28, UInt16:28, UInt16:9398\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tCall2               \tReg8:0, Reg8:4, Reg8:2, Reg8:0\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tJStrictEqual        \tAddr8:105, Reg8:3, Reg8:0\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\tGetByIdShort        \tReg8:0, Reg8:2, UInt8:1, UInt8:121\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\t; Oper[3]: String(121) 'state'\n`})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"This block is the key to solving this challenge. The entered password is compared with the content of a static buffer run through \",(0,e.jsx)(n.code,{children:\"decodedText\"}),\". If they match, check is successful and we are able to login. Our trick here is to change \",(0,e.jsx)(n.code,{children:\"JStrictEqual\"}),\" to \",(0,e.jsx)(n.code,{children:\"JStrictNotEqual\"}),\", so any random password can bypass the password check.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"After changing it, we compile \",(0,e.jsx)(n.code,{children:\"hasm\"}),\" to \",(0,e.jsx)(n.code,{children:\"bundle\"}),\" and then recompile the apk. Inputting \",(0,e.jsx)(n.code,{children:\"admin\"}),\" and empty password gives us the flag text.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Note: Some teams extracted buffers from the \",(0,e.jsx)(n.code,{children:\"metadata.json\"}),\" generated by \",(0,e.jsx)(n.code,{children:\"hbctool\"}),\" and decoded password/flag directly from it, but our approach seems to be simpler in terms of efforts :)\"]})]})}}var f=b;return U;})();\n;return Component;","toc":[{"value":"Herald","url":"#herald","depth":2}],"frontMatter":{"readingTime":{"text":"5 min read","minutes":4.27,"time":256200,"words":854},"slug":"insomni-hack-teaser-2022/herald","fileName":"insomni-hack-teaser-2022/herald.md","title":"Insomni'hack teaser 2022 – Herald","date":"2022-01-30T00:00:00.000Z","draft":false,"authors":["sahuang"],"tags":["Insomni'hack teaser 2022","Mobile","Reverse Engineering","Android","apk","rev","React Native"],"summary":"Hermes Bytecode Reverse Engineering."}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.2,"time":12000,"words":40},"slug":["sahuang"],"fileName":"sahuang.md","name":"sahuang","avatar":"https://www.gravatar.com/avatar/740255f8ddc8f903d3addafb219ea077?d=identicon&s=256","specialties":["Crypto","Reverse"],"github":"https://github.com/sahuang","linkedin":"https://www.linkedin.com/in/xiaohai-xu-1a8884138/","member":true,"order":0,"description":"Rhythm Gamer. Also the team founder.","date":null}],"prev":{"title":"Insomni'hack teaser 2022 – Personal Repository New Generation","date":"2022-01-30T00:00:00.000Z","draft":false,"authors":["blueset"],"tags":["Insomni'hack teaser 2022","Crypto","Web","PHP"],"summary":"I really hate to guess paths.","slug":"insomni-hack-teaser-2022/personal-repository-new-generation"},"next":{"title":"Insomni'hack teaser 2022 – ExPiltration","date":"2022-01-30T00:00:00.000Z","draft":false,"authors":["blueset"],"tags":["Insomni'hack teaser 2022","Misc","Python","CV","Video","Binary"],"summary":"Leak data via LED lights.","slug":"insomni-hack-teaser-2022/expiltration"}},"__N_SSG":true}